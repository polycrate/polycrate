before_script:
  - source <(curl -fsSL https://gitlab.com/ayedocloudsolutions/shipmate/-/raw/main/shipmate.sh)
  - "[[ -f shipmate.sh ]] && source shipmate.sh"

image: registry.gitlab.com/ayedocloudsolutions/adf:1.10.0

stages:
  - build
  - test
  - release
  - publish
  - deploy

variables:
  DOCKER_MULTIPLATFORM: 1
  PACKAGE_NAME: polycrate
  PACKAGE_TYPE: go

workflow:
  rules:
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

.build.docker:
  stage: build
  needs:
    - job: preflight
      artifacts: true
  script:
    - check-conditions $CI_JOB_NAME
    - build-docker
    - comment-mr $CI_JOB_NAME
  rules:
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

.build.package:
  stage: build
  needs:
    - job: preflight
      artifacts: true
  script:
    - check-conditions $CI_JOB_NAME
    - build-package
  artifacts:
    paths:
      - packages
  rules:
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

.release.docker:
  stage: release
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  needs:
    - job: build.docker
      artifacts: false
    - job: release.code
      artifacts: true
  script:
    - check-conditions $CI_JOB_NAME
    - release-docker

.release.package:
  stage: release
  only:
    refs:
      - main
  script:
    - check-conditions $CI_JOB_NAME
    - release-package $PACKAGE_NAME $RELEASE_VERSION $PACKAGE_TYPE $PACKAGE_REGISTRY_PROJECT_ID $PACKAGE_REGISTRY_TOKEN
    - export RELEASE_VERSION=stable
    - release-package
  needs:
    - job: build.package
      artifacts: true
    - job: release.code
      artifacts: true

.release.package.s3:
  stage: release
  only:
    refs:
      - main
  script:
    - check-conditions $CI_JOB_NAME
    - release-package-s3
    - export RELEASE_VERSION=latest
    - release-package-s3
  needs:
    - job: build.package.cli
      artifacts: true
    - job: release.code
      artifacts: true

preflight:
  stage: .pre
  script:
    - generate-next-version
    - save-shipment
    - print-shipment
  artifacts:
    paths:
      - shipment.env
    reports:
      dotenv: shipment.env
  rules:
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

build.package.cli:
  extends: .build.package
  image: golang:latest
  variables:
    PROJECT_DIR: $CI_PROJECT_DIR
  artifacts:
    paths:
      - cli/packages

build.docker.ansible:
  extends: .build.docker
  variables:
    DOCKER_CONTEXT: ansible
    DOCKERFILE: ansible/Dockerfile
    DOCKER_BUILD_IMAGE_NAME: $CI_REGISTRY/$CI_PROJECT_PATH
  script:
    - check-conditions $CI_JOB_NAME
    - cp -r cli/packages/go ansible/cli
    - build-docker
    - comment-mr $CI_JOB_NAME
  needs:
    - job: preflight
      artifacts: true
    - job: build.package.cli
      artifacts: true

release.code:
  stage: release
  rules:
    - exists:
        - ".releaserc.yml"
      if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: manual
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
      when: never
  script:
    - update-version-files
    - release-code
    - save-shipment
  artifacts:
    paths:
      - CHANGELOG.md
      - shipment.env
  allow_failure: true
  needs:
    - job: preflight
      artifacts: true

release.docker.ansible:
  extends: .release.docker
  variables:
    DOCKER_BUILD_IMAGE_NAME: $CI_REGISTRY/$CI_PROJECT_PATH
    DOCKER_RELEASE_IMAGE_NAME: $CI_REGISTRY/$CI_PROJECT_PATH
  needs:
    - job: build.docker.ansible
      artifacts: false
    - job: release.code
      artifacts: true

release.package.cli:
  extends: .release.package.s3
  variables:
    PROJECT_DIR: $CI_PROJECT_DIR/cli
