FROM docker:dind AS docker
FROM quay.io/skopeo/stable:latest AS skopeo
FROM python:3.11-slim

ARG K8S_VERSION=1.32.1
ARG HELM_VERSION=3.17.0
ARG CILIUM_VERSION=0.16.24
ARG VELERO_VERSION=1.15.2
ARG ARGOCD_VERSION=2.14.2
ARG YQ_VERSION=4.45.1

ARG TARGETPLATFORM
ARG TARGETOS
ARG TARGETARCH

ENV GOOS=${TARGETOS}
ENV GOARCH=${TARGETARCH}
ENV PATH=$PATH:/usr/local/go/bin

# Copy CLIs from Docker images
COPY --from=docker /usr/local/bin/docker /usr/local/bin/
COPY --from=skopeo /usr/bin/skopeo /usr/local/bin/

RUN apt-get update && \
  apt-get -y --no-install-recommends install \
  ca-certificates \
  curl \
  git \
  jq \
  gettext \
  libssl-dev \
  libffi-dev \
  python3-dev \
  rsync \
  openssh-client \
  sshpass \
  skopeo \
  unzip \
  wget \
  less \
  build-essential && \
  rm -rf /var/lib/apt/lists/* &&\
  apt-get clean

# Switch to /tmp to download/install all the reuirements
# That allows us to clean up easily
WORKDIR /tmp/polycrate

SHELL ["/bin/bash", "-o", "pipefail", "-c"]

RUN wget -q -O "/usr/local/bin/kubectl" "https://dl.k8s.io/release/v${K8S_VERSION}/bin/${TARGETOS}/${TARGETARCH}/kubectl" && \
  chmod +x /usr/local/bin/kubectl && \
  chmod +x /usr/local/bin/docker && \
  wget -q "https://get.helm.sh/helm-v${HELM_VERSION}-${TARGETOS}-${TARGETARCH}.tar.gz" -O - | tar -xzO $TARGETOS-$TARGETARCH/helm > /usr/local/bin/helm && \
  chmod +x /usr/local/bin/helm && \
  helm plugin install https://github.com/databus23/helm-diff  && \
  wget -q "https://github.com/vmware-tanzu/velero/releases/download/v${VELERO_VERSION}/velero-v${VELERO_VERSION}-${TARGETOS}-${TARGETARCH}.tar.gz" && \
  tar xvzf velero-v${VELERO_VERSION}-${TARGETOS}-${TARGETARCH}.tar.gz && \
  mv velero-v${VELERO_VERSION}-${TARGETOS}-${TARGETARCH}/velero /usr/local/bin/velero && \
  chmod +x /usr/local/bin/velero && \
  wget -q "https://github.com/argoproj/argo-cd/releases/download/v${ARGOCD_VERSION}/argocd-${TARGETOS}-${TARGETARCH}" -O /usr/local/bin/argocd && \
  chmod +x /usr/local/bin/argocd && \
  wget -q "https://github.com/mikefarah/yq/releases/download/v${YQ_VERSION}/yq_${TARGETOS}_${TARGETARCH}" -O /usr/local/bin/yq && \
  chmod +x /usr/local/bin/yq && \
  wget -q "https://github.com/cilium/cilium-cli/releases/download/v${CILIUM_VERSION}/cilium-${TARGETOS}-${TARGETARCH}.tar.gz" && \
  tar xvzf cilium-${TARGETOS}-${TARGETARCH}.tar.gz && \
  mv cilium /usr/local/bin/cilium && \
  chmod +x /usr/local/bin/cilium 

COPY python-requirements.txt python-requirements.txt
COPY ansible-requirements.yml ansible-requirements.yml

RUN --mount=type=cache,target=/root/.cache/pip \
  pip install pip --upgrade

RUN mkdir -p /etc/ansible /etc/ansible/roles /etc/ansible/collections /workspace /polycrate /usr/share/ansible/plugins/vars && \
  pip install --no-cache-dir -r python-requirements.txt

RUN ansible-galaxy collection install community.general community.docker && \
  ansible-galaxy install -r ansible-requirements.yml

COPY hack/ansible/plugins/vars/polycrate_vars.py /usr/share/ansible/plugins/vars/polycrate_vars.py
COPY hack/ansible/inventory /etc/ansible/hosts
COPY hack/poly-utils /opt/poly-utils

RUN chmod +x /opt/poly-utils/poly-utils && \
  ln -s "/opt/poly-utils/poly-utils" "/usr/local/bin/poly-utils" && \
  rm -rf /tmp/polycrate

WORKDIR /workspace

COPY polycrate /usr/local/bin/polycrate

ENTRYPOINT ["polycrate"]